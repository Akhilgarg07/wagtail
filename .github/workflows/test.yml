name: Wagtail CI

on:
  push:
  pull_request:


# Our test suite should cover:
# - all supported databases against current Python and Django
# - at least one test run for each older supported version of Python and Django
# - at least one test run for each supported Elasticsearch version
# - a test run against Django's git master and active stable branch (allowing failures)
# - test runs with USE_EMAIL_USER_MODEL=yes and DISABLE_TIMEZONE=yes

# Current configuration:
# - django 2.2, python 3.6, mysql
# - django 3.0, python 3.7, sqlite
# - django 3.1, python 3.8, postgres
# - django 3.1, python 3.9, mysql
# - django 3.1, python 3.9, sqlite
# - django 3.1, python 3.9, postgres, USE_EMAIL_USER_MODEL=yes
# - django 3.1, python 3.9, postgres, DISABLE_TIMEZONE=yes
# - django stable/3.2.x, python 3.9, postgres (allow failures)
# - django master, python 3.9, postgres (allow failures)
# - elasticsearch 5, django 2.2, python 3.6, sqlite
# - elasticsearch 6, django 3.0, python 3.7, postgres
# - elasticsearch 7, django 3.1, python 3.8, postgres
# - elasticsearch 7, django 3.1, python 3.9, sqlite, USE_EMAIL_USER_MODEL=yes

jobs:
  pre_ci:
    # The primary purpose of this job is to get the commmit message for both
    # push and PR events. It would be trivial if we just used push events,
    # but GitHub Actions inexplicably doesn't make the most recent commit
    # message available to PR events. This job gets the commit message and
    # stores it in output that jobs can access via:
    # needs.pre_ci.outputs.commit_message
    name: Prepare CI environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          # We need to fetch with a depth of 2 for pull_request so we can do HEAD^2.
          fetch-depth: 2

      # If this workflow was triggered by a push, resolve the commit message from HEAD.
      # It is stored in output steps, to be referenced with:
      # ${{ steps.push_get_commit_message.outputs.push_commit_message }}
      - name: "[Push] Get commit message"
        if: github.event_name == 'push'
        id: push_get_commit_message
        run:
          echo ::set-output name=push_commit_message::$(git log --format=%B -n 1 HEAD)

      # If this workflow was triggered by a pull request (open or synchronize!),
      # resolve the commit message from HEAD^2.
      # It is stored in output steps, to be referenced with:
      # ${{ steps.pr_get_commit_message.outputs.pr_commit_message }}
      - name: "[Pull Request] Get commit message"
        if: github.event_name == 'pull_request'
        id: pr_get_commit_message
        run: echo ::set-output name=pr_commit_message::$(git log --format=%B -n 1 HEAD^2)

    # Finally we want to make the commit message available to other jobs.
    # This can be done with job-level outputs, however, as we do not know
    # whether the commit message was set in Push or Pull Request event,
    # we need to do some Bash magic to resolve the one or the other.
    #
    # For Pull Request events, this will resolve to something like
    # "$( [ -z "commit message pr" ] && echo "" || echo "commit message pr" )",
    # which then resolves to just "commit message pr".
    #
    # For Push events, this will resolve to something like
    # "$( [ -z "" ] && echo "commit message push"  || echo "" )",
    # which then resolves to just "commit message push".
    outputs:
      commit_message: $( [ -z "${{ steps.pr_get_commit_message.outputs.pr_commit_message }}" ] && echo "${{ steps.push_get_commit_message.outputs.push_commit_message }}" || echo "${{ steps.pr_get_commit_message.outputs.pr_commit_message }}" )

  test-sqlite:
    # Skip job if the event's commit message contains [skip ci]
    needs: pre_ci
    if: "!contains(needs.pre_ci.outputs.commit_message, '[skip ci]')"

    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python: 3.7
            django: "Django>=3.0,<3.1"
          - python: 3.9
            django: "Django>=3.1,<3.2"

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "${{ matrix.django }}"
          pip install -e .[testing]
      - name: Test
        run: |
          ./runtests.py
        env:
          DATABASE_ENGINE: django.db.backends.sqlite3

  test-postgres:
    # Skip job if the event's commit message contains [skip ci]
    needs: pre_ci
    if: "!contains(needs.pre_ci.outputs.commit_message, '[skip ci]')"

    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        include:
          - python: 3.8
            django: "Django>=3.1,<3.2"
            experimental: false
          - python: 3.9
            django: "Django>=3.1,<3.2"
            emailuser: emailuser
            experimental: false
          - python: 3.9
            django: "Django>=3.1,<3.2"
            notz: notz
            experimental: false
          - python: 3.9
            django: "git+https://github.com/django/django.git@stable/3.2.x#egg=Django"
            experimental: true
          - python: 3.9
            django: "git+https://github.com/django/django.git@master#egg=Django"
            experimental: true

    services:
      postgres:
        image: postgres:10.8
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "psycopg2>=2.6"
          pip install "${{ matrix.django }}"
          pip install -e .[testing]
      - name: Test
        run: |
          ./runtests.py
        env:
          DATABASE_ENGINE: django.db.backends.postgresql
          DATABASE_HOST: localhost
          DATABASE_USER: postgres
          DATABASE_PASS: postgres
          USE_EMAIL_USER_MODEL: ${{ matrix.emailuser }}
          DISABLE_TIMEZONE: ${{ matrix.notz }}

  test-mysql:
    # Skip job if the event's commit message contains [skip ci]
    needs: pre_ci
    if: "!contains(needs.pre_ci.outputs.commit_message, '[skip ci]')"

    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python: 3.6
            django: "Django>=2.2,<3.0"
          - python: 3.9
            django: "Django>=3.1,<3.2"

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: wagtail
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "mysqlclient>=1.4,<2"
          pip install "${{ matrix.django }}"
          pip install -e .[testing]
      - name: Test
        run: |
          ./runtests.py
        env:
          DATABASE_ENGINE: django.db.backends.mysql
          DATABASE_HOST: "127.0.0.1"
          DATABASE_USER: root

  # https://github.com/elastic/elastic-github-actions doesn't work for Elasticsearch 5,
  # but https://github.com/getong/elasticsearch-action does
  test-sqlite-elasticsearch5:
    # Skip job if the event's commit message contains [skip ci]
    needs: pre_ci
    if: "!contains(needs.pre_ci.outputs.commit_message, '[skip ci]')"

    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python: 3.6
            django: "Django>=2.2,<3.0"
    steps:
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - uses: getong/elasticsearch-action@v1.2
        with:
          elasticsearch version: 5.6.9
          host port: 9200
          container port: 9200
          host node port: 9300
          node port: 9300
          discovery type: 'single-node'
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "${{ matrix.django }}"
          pip install -e .[testing]
          pip install "elasticsearch>=5,<6"
          pip install certifi
      - name: Test
        run: |
          ./runtests.py wagtail.search wagtail.documents wagtail.images --elasticsearch5
        env:
          DATABASE_ENGINE: django.db.backends.sqlite3

  test-sqlite-elasticsearch7:
    # Skip job if the event's commit message contains [skip ci]
    needs: pre_ci
    if: "!contains(needs.pre_ci.outputs.commit_message, '[skip ci]')"

    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python: 3.9
            django: "Django>=3.1,<3.2"
            emailuser: emailuser
    steps:
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - uses: getong/elasticsearch-action@v1.2
        with:
          elasticsearch version: 7.6.1
          host port: 9200
          container port: 9200
          host node port: 9300
          node port: 9300
          discovery type: 'single-node'
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "${{ matrix.django }}"
          pip install -e .[testing]
          pip install "elasticsearch>=7,<8"
          pip install certifi
      - name: Test
        run: |
          ./runtests.py wagtail.search wagtail.documents wagtail.images --elasticsearch7
        env:
          DATABASE_ENGINE: django.db.backends.sqlite3
          USE_EMAIL_USER_MODEL: ${{ matrix.emailuser }}

  # https://github.com/getong/elasticsearch-action doesn't work for Elasticsearch 6,
  # but https://github.com/elastic/elastic-github-actions does
  test-postgres-elasticsearch6:
    # Skip job if the event's commit message contains [skip ci]
    needs: pre_ci
    if: "!contains(needs.pre_ci.outputs.commit_message, '[skip ci]')"

    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python: 3.7
            django: "Django>=3.0,<3.1"

    services:
      postgres:
        image: postgres:10.8
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 6.8.13
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "psycopg2>=2.6"
          pip install "${{ matrix.django }}"
          pip install -e .[testing]
          pip install "elasticsearch>=6,<7"
          pip install certifi
      - name: Test
        run: |
          ./runtests.py wagtail.search wagtail.documents wagtail.images --elasticsearch6
        env:
          DATABASE_ENGINE: django.db.backends.postgresql
          DATABASE_HOST: localhost
          DATABASE_USER: postgres
          DATABASE_PASS: postgres
          USE_EMAIL_USER_MODEL: ${{ matrix.emailuser }}

  test-postgres-elasticsearch7:
    # Skip job if the event's commit message contains [skip ci]
    needs: pre_ci
    if: "!contains(needs.pre_ci.outputs.commit_message, '[skip ci]')"

    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python: 3.8
            django: "Django>=3.1,<3.2"

    services:
      postgres:
        image: postgres:10.8
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 7.6.1
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "psycopg2>=2.6"
          pip install "${{ matrix.django }}"
          pip install -e .[testing]
          pip install "elasticsearch>=7,<8"
          pip install certifi
      - name: Test
        run: |
          ./runtests.py wagtail.search wagtail.documents wagtail.images --elasticsearch7
        env:
          DATABASE_ENGINE: django.db.backends.postgresql
          DATABASE_HOST: localhost
          DATABASE_USER: postgres
          DATABASE_PASS: postgres
          USE_EMAIL_USER_MODEL: ${{ matrix.emailuser }}
